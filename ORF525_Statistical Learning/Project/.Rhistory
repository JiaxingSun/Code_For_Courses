for(n in 1:29485)
{
if(labels[n]==0)
prob[n,1]=1
if(labels[n]==2)
prob[n,2]=1
if(labels[n]==5)
prob[n,3]=1
if(labels[n]==6)
prob[n,4]=1
if(labels[n]==7)
prob[n,5]=1
}
ele<-matrix(0,29485,5)
proberr<-rep(0,10000)
sigerr<-rep(0,10000)
muerr<-rep(0,10000)
for(m in 1:10)
{
probt<-prob
sigt<-sig
mut<-mu
for(j in 1:5)
{
eta[j]<-mean(prob[,j])
mu[,j]<-(t(images3)%*%prob[,j])/sum(prob[,j])
}
for(j in 1:5)
{
sig[,j]<-sum(prob[,j]*colSums((t(images3)-mu[,j])^2))/(sum(prob[,j])*196)
}
for(i in 1:29485)
{
for(j in 1:5)
{
ele[i,j]<-log(eta[j])+sum(dnorm(images3[i,],mu[,j],sqrt(sig[,j]),log=T))
}
ele[i,]<-ele[i,]-max(ele[i,])#####all the ele are 0 now, to be fixed
prob[i,]<-exp(ele[i,])/sum(exp(ele[i,]))
}
proberr[m]<-sum((probt-prob)^2)
sigerr[m]<-sum((sigt-sig)^2)
muerr[m]<-sum((mut-mu)^2)
print(m)
}
#####label all the pictures
labels2<-rep(0,29485)
for(i in 1:29485)
labels2[i]<-which.max(prob[i,])
#####Plot1
par(mfrow=c(5,6),mar=c(0,0,0,0))
for(i in 1:5)
for(m in 1:6)
image(restru(images2[(which(labels2==i))[m+13],],14),asp=1,col=grey(seq(0,1,length.out=256)))
#####Plot2
par(mfrow=c(1,5),mar=c(0,0,0,0))
cente<-matrix(0,196,5)
for(i in 1:5)
{
summat<-rep(0,196)
for(j in 1:length(which(labels2==i)))
summat=summat+images2[which(labels2==i)[j],]
cente[,i]<-summat/length(which(labels2==i))
image(restru(cente[,i],14),asp=1,col=grey(seq(0,1,length.out=256)))
}
#####Plot3
vari<-matrix(0,14,14)
par(mfrow=c(1,5),mar=c(0,0,0,0))
for(i in 1:5)
{
for(j in which(labels2==i))
vari=vari+(images2[j,]-cente[,i])^2
vari=vari/length(which(labels2==i))
image(restru(vari,14),asp=1,col=grey(seq(0,1,length.out=256)))
}
#####Table1
labmat<-matrix(0,5,5)
labvec<-c(0,2,5,6,7)
for(i in 1:5)#corresponds to real labels
{
for(j in 1:5)#corresponds to assigned labels
{
labmat[i,j]=sum(labels2[which(labels==labvec[i])]==j)
}
}
#####calculate the error rate
era<-rep(0,5)
for(i in 1:5)
{
era[i]=1-labmat[i,i]/sum(labmat[,i])
}
labmat
era
#####initialization
images3<-images2[1:29485,]+matrix(rnorm(29485*196,0.1,0.1),29485,196)
eta<-c(0.1,0.2,0.4,0.2,0.1)
mu<-matrix(50,196,5)
sig<-matrix(10000,196,5)
prob<-matrix(0,29485,5)
for(n in 1:29485)
{
if(labels[n]==0)
prob[n,1]=1
if(labels[n]==2)
prob[n,2]=1
if(labels[n]==5)
prob[n,3]=1
if(labels[n]==6)
prob[n,4]=1
if(labels[n]==7)
prob[n,5]=1
}
ele<-matrix(0,29485,5)
proberr<-rep(0,10000)
sigerr<-rep(0,10000)
muerr<-rep(0,10000)
for(m in 1:30)
{
probt<-prob
sigt<-sig
mut<-mu
for(j in 1:5)
{
eta[j]<-mean(prob[,j])
mu[,j]<-(t(images3)%*%prob[,j])/sum(prob[,j])
}
for(j in 1:5)
{
sig[,j]<-sum(prob[,j]*colSums((t(images3)-mu[,j])^2))/(sum(prob[,j])*196)
}
for(i in 1:29485)
{
for(j in 1:5)
{
ele[i,j]<-log(eta[j])+sum(dnorm(images3[i,],mu[,j],sqrt(sig[,j]),log=T))
}
ele[i,]<-ele[i,]-max(ele[i,])#####all the ele are 0 now, to be fixed
prob[i,]<-exp(ele[i,])/sum(exp(ele[i,]))
}
proberr[m]<-sum((probt-prob)^2)
sigerr[m]<-sum((sigt-sig)^2)
muerr[m]<-sum((mut-mu)^2)
print(m)
}
#####label all the pictures
labels2<-rep(0,29485)
for(i in 1:29485)
labels2[i]<-which.max(prob[i,])
#####Plot1
par(mfrow=c(5,6),mar=c(0,0,0,0))
for(i in 1:5)
for(m in 1:6)
image(restru(images2[(which(labels2==i))[m+13],],14),asp=1,col=grey(seq(0,1,length.out=256)))
#####Plot2
par(mfrow=c(1,5),mar=c(0,0,0,0))
cente<-matrix(0,196,5)
for(i in 1:5)
{
summat<-rep(0,196)
for(j in 1:length(which(labels2==i)))
summat=summat+images2[which(labels2==i)[j],]
cente[,i]<-summat/length(which(labels2==i))
image(restru(cente[,i],14),asp=1,col=grey(seq(0,1,length.out=256)))
}
#####Plot3
vari<-matrix(0,14,14)
par(mfrow=c(1,5),mar=c(0,0,0,0))
for(i in 1:5)
{
for(j in which(labels2==i))
vari=vari+(images2[j,]-cente[,i])^2
vari=vari/length(which(labels2==i))
image(restru(vari,14),asp=1,col=grey(seq(0,1,length.out=256)))
}
#####Table1
labmat<-matrix(0,5,5)
labvec<-c(0,2,5,6,7)
for(i in 1:5)#corresponds to real labels
{
for(j in 1:5)#corresponds to assigned labels
{
labmat[i,j]=sum(labels2[which(labels==labvec[i])]==j)
}
}
#####calculate the error rate
era<-rep(0,5)
for(i in 1:5)
{
era[i]=1-labmat[i,i]/sum(labmat[,i])
}
era
setwd("C:/Course/ORF525Statistical Learning/Project")
adults<-read.csv("income.csv",header=F)
head(adults)
setwd("C:/Course/ORF525Statistical Learning/Project")
adults<-read.csv("income.csv",header=F)
head(adults)
names(adults)
colnames(adults)<-c("Age","workclass", "fnlwgt", "education", "education.num","marital.status", "occupation", "relationship", "race", "sex", "capital.gain","capital.loss", "hour.per.wk", "native.country", "income.class")
dim(adults)
names(adults)
test$income.class
test
setwd("C:/Course/ORF525Statistical Learning/Project")
adults<-read.csv("income.csv",header=F)
head(adults)
names(adults)
colnames(adults)<-c("Age","workclass", "fnlwgt", "education", "education.num","marital.status", "occupation", "relationship", "race", "sex", "capital.gain","capital.loss", "hour.per.wk", "native.country", "income.class")
train <- adults[1:16280, ]
test <- adults[16281:length(adults), ]
test
test$income.class
str(income$class)
str(test$income.class)
str(test$workclass)
setwd("C:/Course/ORF525Statistical Learning/Project")
adults<-read.csv("income.csv",header=F)
head(adults)
names(adults)
colnames(adults)<-c("Age","workclass", "fnlwgt", "education", "education.num","marital.status", "occupation", "relationship", "race", "sex", "capital.gain","capital.loss", "hour.per.wk", "native.country", "income.class")
train <- adults[1:16280, ]
test <- adults[16281:length(adults), ]
test$income.class
test$workclass
<- as.factor(test$education)
test$education
test$income.class <- as.factor(test$income.class)
test$workclass <- as.factor(test$workclass)
test$education <- as.factor(test$education)
test$income.class
?is.null
?table
setwd("C:/Course/ORF525Statistical Learning/Project")
adults<-read.csv("income.csv",header=F)
head(adults)
names(adults)
colnames(adults)<-c("Age","workclass", "fnlwgt", "education", "education.num","marital.status", "occupation", "relationship", "race", "sex", "capital.gain","capital.loss", "hour.per.wk", "native.country", "income.class")
train <- adults[1:16280, ]
test <- adults[16281:length(adults), ]
test$income.class <- as.factor(test$income.class)
test$workclass <- as.factor(test$workclass)
test$education <- as.factor(test$education)
test$marital.status <- as.factor(test$marital.status)
test$occupation <- as.factor(test$occupation)
test$relationship <- as.factor(test$relationship)
test$race <- as.factor(test$race)
test$sex <- as.factor(test$sex)
test$native.country <- as.factor(test$native.country)
train$income.class <- as.factor(train$income.class)
train$workclass <- as.factor(train$workclass)
train$education <- as.factor(train$education)
train$marital.status <- as.factor(train$marital.status)
train$occupation <- as.factor(train$occupation)
train$relationship <- as.factor(train$relationship)
train$race <- as.factor(train$race)
train$sex <- as.factor(train$sex)
train$native.country <- as.factor(train$native.country)
train$hour.per.week <- as.factor(train$hour.per.week)
train$hour.per.week
setwd("C:/Course/ORF525Statistical Learning/Project")
adults<-read.csv("income.csv",header=F)
head(adults)
names(adults)
colnames(adults)<-c("Age","workclass", "fnlwgt", "education", "education.num","marital.status", "occupation", "relationship", "race", "sex", "capital.gain","capital.loss", "hour.per.wk", "native.country", "income.class")
train <- adults[1:16280, ]
test <- adults[16281:length(adults), ]
test$income.class <- as.factor(test$income.class)
test$workclass <- as.factor(test$workclass)
test$education <- as.factor(test$education)
test$marital.status <- as.factor(test$marital.status)
test$occupation <- as.factor(test$occupation)
test$relationship <- as.factor(test$relationship)
test$race <- as.factor(test$race)
test$sex <- as.factor(test$sex)
test$native.country <- as.factor(test$native.country)
train$income.class <- as.factor(train$income.class)
train$workclass <- as.factor(train$workclass)
train$education <- as.factor(train$education)
train$marital.status <- as.factor(train$marital.status)
train$occupation <- as.factor(train$occupation)
train$relationship <- as.factor(train$relationship)
train$race <- as.factor(train$race)
train$sex <- as.factor(train$sex)
train$native.country <- as.factor(train$native.country)
str(train)
str(test)
setwd("C:/Course/ORF525Statistical Learning/Project")
adults<-read.csv("income.csv",header=F)
head(adults)
names(adults)
colnames(adults)<-c("Age","workclass", "fnlwgt", "education", "education.num","marital.status", "occupation", "relationship", "race", "sex", "capital.gain","capital.loss", "hour.per.wk", "native.country", "income.class")
train <- adults[1:16280, ]
test <- adults[16281:length(adults), ]
test$income.class <- as.factor(test$income.class)
test$workclass <- as.factor(test$workclass)
test$occupation <- as.factor(test$occupation)
test$education <- as.factor(test$education)
test$relationship <- as.factor(test$relationship)
test$race <- as.factor(test$race)
test$sex <- as.factor(test$sex)
test$marital.status <- as.factor(test$marital.status)
test$native.country <- as.factor(test$native.country)
train$income.class <- as.factor(train$income.class)
train$hour.per.week
train$native.country
test$hour.per.week
setwd("C:/Course/ORF525Statistical Learning/Project")
adults<-read.csv("income.csv",header=F)
head(adults)
names(adults)
colnames(adults)<-c("Age","workclass", "fnlwgt", "education", "education.num","marital.status", "occupation", "relationship", "race", "sex", "capital.gain","capital.loss", "hour.per.wk", "native.country", "income.class")
View(adults)
adults$hour.per.week
adults$education.num
adults(hour.per.week)
adults$1
adults$V1
setwd("C:/Course/ORF525Statistical Learning/Project")
adults<-read.csv("income.csv",header=F)
head(adults)
names(adults)
adults(V1)
adults$V1
View(adults)
adults$V13
adults$V13[1:10]
train <- adults[1:16280, ]
test <- adults[16281:length(adults), ]
train$V13
test$V13
colnames(adults)<-c("Age","workclass", "fnlwgt", "education", "education.num","marital.status", "occupation", "relationship", "race", "sex", "capital.gain","capital.loss", "hour.per.wk", "native.country", "income.class")
train <- adults[1:16280, ]
test <- adults[16281:length(adults), ]
train$hour.per.week
train$Age
train$age
train$hour.per.wk
setwd("C:/Course/ORF525Statistical Learning/Project")
adults<-read.csv("income.csv",header=F)
head(adults)
names(adults)
colnames(adults)<-c("Age","workclass", "fnlwgt", "education", "education.num","marital.status", "occupation", "relationship", "race", "sex", "capital.gain","capital.loss", "hour.per.wk", "native.country", "income.class")
train <- adults[1:16280, ]
test <- adults[16281:length(adults), ]
test$income.class <- as.factor(test$income.class)
test$workclass <- as.factor(test$workclass)
test$education <- as.factor(test$education)
test$marital.status <- as.factor(test$marital.status)
test$occupation <- as.factor(test$occupation)
test$relationship <- as.factor(test$relationship)
test$race <- as.factor(test$race)
test$sex <- as.factor(test$sex)
test$native.country <- as.factor(test$native.country)
train$income.class <- as.factor(train$income.class)
train$workclass <- as.factor(train$workclass)
train$education <- as.factor(train$education)
train$marital.status <- as.factor(train$marital.status)
train$occupation <- as.factor(train$occupation)
train$relationship <- as.factor(train$relationship)
train$race <- as.factor(train$race)
train$sex <- as.factor(train$sex)
train$native.country <- as.factor(train$native.country)
confusion <- function(actual, predicted, names = NULL, printit = TRUE, prior = NULL)
{
if (is.null(names))
names <- levels(actual)
tab <- table(actual, predicted)
acctab <- t(apply(tab, 1, function(x) x/sum(x)))
dimnames(acctab) <- list(Actual = names, 'Predicted (cv)' = names)
if (is.null(prior)) { relnum <- table(actual)
prior <- relnum/sum(relnum)
acc <- sum(tab[row(tab) == col(tab)])/sum(tab)
}
else { acc <- sum(prior * diag(acctab))
names(prior) <- names
}
if (printit)
print(round(c('Overall accuracy' = acc, 'Prior frequency' = prior),
4))
if (printit) { cat("nnConfusion matrix", "nn")
print(round(acctab, 4))
}
invisible(acctab)
}
?step
model1 = glm(income.class ~ Age + education.num + marital.status + occupation +
race + sex, family = binomial, data = train)
pred.model1 <- round(predict(model1, newdata = test, type = "response"))
confusion(test$income.class, pred.model1)
model2 = glm(income.class ~ Age + workclass + education.num + marital.status +
occupation + relationship + race + sex + native.country, family = binomial,
data = train)
pred.model2 <- round(predict(model2, newdata = test, type = "response"))
confusion(test$income.class, pred.model2)
model3 = glm(income.class ~ Age + education.num + marital.status + occupation +
relationship + race + sex + native.country, family = binomial, data = train)
pred.model3 <- round(predict(model3, newdata = test, type = "response"))
confusion(test$income.class, pred.model3)
model4 = glm(income.class ~ Age + workclass + education.num + marital.status +
occupation + relationship + race + sex, family = binomial, data = train)
pred.model4 <- round(predict(model4, newdata = test, type = "response"))
confusion(test$income.class, pred.model4)
model5 = glm(income.class ~ Age + education.num + occupation + race + sex, family = binomial,data = train)
pred.model5 <- round(predict(model5, newdata = test, type = "response"))
confusion(test$income.class, pred.model5)
model6 = glm(income.class ~ education.num + marital.status + occupation + race +
sex, family = binomial, data = train)
pred.model6 <- round(predict(model6, newdata = test, type = "response"))
confusion(test$income.class, pred.model6)
model7 = glm(income.class ~ Age + fnlwgt + education.num + marital.status +
occupation + race + sex, family = binomial, data = train)
pred.model7 <- round(predict(model7, newdata = test, type = "response"))
confusion(test$income.class, pred.model7)
model8 = glm(income.class ~ Age + fnlwgt + education + education.num + marital.status +
occupation + race + sex + hour.per.wk, family = binomial, data = train)
pred.model8 <- round(predict(model8, newdata = test, type = "response"))
confusion(test$income.class, pred.model8)
model9 = glm(income.class ~ Age + workclass + education.num + marital.status +
occupation + relationship + race + sex + hour.per.wk, family = binomial,
data = train)
pred.model9 <- round(predict(model9, newdata = test, type = "response"))
confusion(test$income.class, pred.model9)
model10 = glm(income.class ~ Age + workclass + fnlwgt + education + education.num +
marital.status + occupation + relationship + race + sex + capital.gain +
capital.loss + hour.per.wk + native.country, family = binomial, data = train)
pred.model10 <- round(predict(model10, newdata = test, type = "response"))
confusion(test$income.class, pred.model10)
?sample
prior <- table(train$income.class)
prior <- prior/sum(prior)
index <- train[sample(nrow(train), replace = TRUE), ]
boot.log <- glm(income.class ~ Age + education.num + marital.status + occupation +
race + sex, family = binomial, data = index)
pred.model <- round(predict(boot.log, newdata = test[1:dim(index)[1], ], type = "response"))
cmat <- confusion(index$income.class, pred.model)
print(c(acc = round(prior[1] * cmat[1, 1] + prior[2] * cmat[2, 2], 4)))
prior <- table(train$income.class)
prior <- prior/sum(prior)
index <- train[sample(nrow(train), replace = TRUE), ]
boot.log <- glm(income.class ~ Age + education.num + marital.status + occupation +
race + sex, family = binomial, data = index)
pred.model <- round(predict(boot.log, newdata = test[1:dim(index)[1], ], type = "response"))
cmat <- confusion(index$income.class, pred.model)
print(c(acc = round(prior[1] * cmat[1, 1] + prior[2] * cmat[2, 2], 4)))
setwd("C:/Course/ORF525Statistical Learning/Project")
adults<-read.csv("income.csv",header=F)
colnames(adults)<-c("Age","workclass", "fnlwgt", "education", "education.num","marital.status", "occupation", "relationship", "race", "sex", "capital.gain","capital.loss", "hour.per.wk", "native.country", "income.class")
train <- adults[1:16280, ]
test <- adults[16281:length(adults), ]
test$income.class <- as.factor(test$income.class)
test$workclass <- as.factor(test$workclass)
test$education <- as.factor(test$education)
test$marital.status <- as.factor(test$marital.status)
test$occupation <- as.factor(test$occupation)
test$relationship <- as.factor(test$relationship)
test$race <- as.factor(test$race)
test$sex <- as.factor(test$sex)
test$native.country <- as.factor(test$native.country)
train$income.class <- as.factor(train$income.class)
train$workclass <- as.factor(train$workclass)
train$education <- as.factor(train$education)
train$marital.status <- as.factor(train$marital.status)
train$occupation <- as.factor(train$occupation)
train$relationship <- as.factor(train$relationship)
train$race <- as.factor(train$race)
train$sex <- as.factor(train$sex)
train$native.country <- as.factor(train$native.country)
library(MASS)
adult.lda <- lda(income.class ~ ., data = train)
names(train)
View(train)
adult.lda <- lda(income.class ~ ., data = train)
setwd("C:/Course/ORF525Statistical Learning/Project")
adults<-read.csv("income.csv",header=F)
colnames(adults)<-c("Age","workclass", "fnlwgt", "education", "education.num","marital.status", "occupation", "relationship", "race", "sex", "capital.gain","capital.loss", "hour.per.wk", "native.country", "income.class")
train <- adults[1:16280, ]
test <- adults[16281:length(adults), ]
test$income.class <- as.factor(test$income.class)
test$workclass <- as.factor(test$workclass)
test$education <- as.factor(test$education)
test$marital.status <- as.factor(test$marital.status)
test$occupation <- as.factor(test$occupation)
test$relationship <- as.factor(test$relationship)
test$race <- as.factor(test$race)
test$sex <- as.factor(test$sex)
test$native.country <- as.factor(test$native.country)
train$income.class <- as.factor(train$income.class)
train$workclass <- as.factor(train$workclass)
train$education <- as.factor(train$education)
train$marital.status <- as.factor(train$marital.status)
train$occupation <- as.factor(train$occupation)
train$relationship <- as.factor(train$relationship)
train$race <- as.factor(train$race)
train$sex <- as.factor(train$sex)
train$native.country <- as.factor(train$native.country)
library(MASS)
adult.lda <- lda(income.class ~ ., data = train)
setwd("C:/Course/ORF525Statistical Learning/Project")
adults<-read.csv("income.csv",header=F)
colnames(adults)<-c("Age","workclass", "fnlwgt", "education", "education.num","marital.status", "occupation", "relationship", "race", "sex", "capital.gain","capital.loss", "hour.per.wk", "native.country", "income.class")
train <- adults[1:16280, ]
test <- adults[16281:length(adults), ]
train
View(test)
View(train)
library(MASS)
adult.lda <- lda(income.class ~ ., data = train)
View(train)
adult.lda <- lda(income.class ~., data = train)
null <- lda(income.class ~ Age, data = train)
adult.lda <- lda(income.class ~., data = train)
null <- lda(income.class ~ Age, data = train)
